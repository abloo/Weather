pipeline {
    agent any
    tools {
        nodejs 'NodeJS' // Name of the Node.js installation configured in Jenkins
    }

    environment {
        DOCKER_IMAGE = "weather-ui"   /* Name of the Docker image */
        REGISTRY_URL = "manvendra183" /* Docker registry */
        REGISTRY_CREDENTIALS = "docker-credentials-id" /* Docker credentials */
    }

    stages {

        stage('Clone Repository') {
            steps {
                git branch: 'master', credentialsId: 'git-credentials-id', url: 'https://github.com/abloo/Weather-ui.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                bat 'npm install'
            }
        }

        stage('Build React App') {
            steps {
                bat 'npm run build'
            }
        }

        stage('Run Tests') {
            steps {
                bat 'npm test -- --passWithNoTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    bat 'docker build -t %DOCKER_IMAGE% .'
                }
            }
        }

        stage('Push Docker Image to Registry') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: REGISTRY_CREDENTIALS, passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                        bat 'docker login -u %USERNAME% -p %PASSWORD%'
                    }
                    bat 'docker tag %DOCKER_IMAGE% %REGISTRY_URL%/%DOCKER_IMAGE%:latest'
                    bat 'docker push %REGISTRY_URL%/%DOCKER_IMAGE%:latest'
                }
            }
        }

        stage('Deploy to Server') {
            steps {
                script {
                    // Stop and remove any existing container with the name 'weather-app'
                    bat '''
                        FOR /F "tokens=*" %%i IN ('docker ps -q --filter "name=weather-app"') DO (
                            docker stop %%i
                            docker rm %%i
                        ) || echo "No container to stop"
                    '''

                    // Run the new container
                    bat 'docker run -d -p 3000:3000 --name weather-app %REGISTRY_URL%/%DOCKER_IMAGE%:latest'
                }
            }
        }

    }

    post {
        always {
            // Clean workspace after the build
            cleanWs()
        }
    }
}
